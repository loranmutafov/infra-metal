apiVersion: apps/v1
kind: Deployment
metadata:
  name: invoices-app
  namespace: royaltechnology-public
  labels:
    app: invoices-app
    tier: frontend
spec:
  selector:
    matchLabels:
      app: invoices-app
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: invoices-app
        tier: frontend
      annotations:
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-secret-config: "database/creds/royaltechnology-invoices"
        vault.hashicorp.com/agent-inject-template-config: |
          {{- with secret "database/creds/royaltechnology-invoices" }}
            export DB_TYPE=mysql
            export DB_HOST=mysql.crown-private
            export DB_DATABASE=royaltechnology_invoices
            export DB_USERNAME={{ .Data.username }}
            export DB_PASSWORD={{ .Data.password }}
          {{- end }}
          {{ with secret "kv/data/invoices-royal-technology-smtp" -}}
            export MAIL_MAILER="{{ .Data.data.mailer }}"
            export MAIL_HOST="{{ .Data.data.host }}"
            export MAIL_PORT={{ .Data.data.port }}
            export MAIL_USERNAME="{{ .Data.data.username }}"
            export MAIL_PASSWORD="{{ .Data.data.password }}"
            export MAIL_ENCRYPTION="{{ .Data.data.encryption }}"
            export MAIL_FROM_ADDRESS="{{ .Data.data.from_address }}"
            export MAIL_FROM_NAME="{{ .Data.data.from_name }}"
          {{- end }}
        vault.hashicorp.com/role: "royaltechnology-invoices"
    spec:
      serviceAccountName: invoices-app # Connect the Vault Kubernetes Role
      initContainers:
      - name: volume-permissions
        securityContext:
          runAsUser: 0
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -ec
        - |
          chown -R 1500:1500 /var/www/app/public
          chown -R 1500:1500 /var/www/app/storage
          # . /vault/secrets/config && php artisan config:cache
        volumeMounts:
        - mountPath: /var/www/app/public
          name: public-pv
        - mountPath: /var/www/app/storage
          name: storage-pv
      containers:
      - name: invoices
        image: invoiceninja/invoiceninja:5.8.57
        securityContext:
          runAsNonRoot: true
          runAsUser: 1500
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 250m
            memory: 2Gi
        env:
        - name: APP_NAME
          value: Royal Technology Invoices
        - name: APP_ENV
          value: production
        - name: APP_DEBUG
          value: "false"
        - name: EXPANDED_LOGGING
          value: "false"
        - name: LOG_CHANNEL
          value: stack # stderr
        - name: APP_URL
          value: https://invoices.royal.technology
        - name: APP_KEY
          value: base64:yVL4TtpKm0eFUDNakargrJ8XhOFYGfTy5/gIvfKR/Kw=
        - name: APP_CIPHER
          value: AES-256-CBC
        - name: PDF_GENERATOR
          value: snappdf
        - name: PHANTOMJS_PDF_GENERATION
          value: "false"
        - name: TRUSTED_PROXIES
          value: "*"
        - name: REQUIRE_HTTPS
          value: "false"
        command:
        - /bin/sh
        - -ce
        - |
          . /vault/secrets/config && php artisan config:cache && docker-entrypoint php-fpm
        args: []
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                cat <<'EOF' > /var/www/app/vault-changed.sh
                #!/bin/sh
                event="$1"
                directory="$2"
                file="$3"
                case "$event" in
                  w) . /vault/secrets/config; php artisan config:cache
                esac
                EOF
                chmod +x /var/www/app/vault-changed.sh
                nohup inotifyd /var/www/app/vault-changed.sh /vault/secrets &
        ports:
        - containerPort: 9000
          name: fastcgi
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 6
          exec:
            command:
            - pgrep
            - php-fpm
        readinessProbe:
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 6
          tcpSocket:
            port: fastcgi
        volumeMounts:
        - name: public-pv
          mountPath: /var/www/app/public
        - name: storage-pv
          mountPath: /var/www/app/storage
      - name: nginx
        image: nginx:1
        securityContext:
          runAsNonRoot: true
          runAsUser: 1500
        ports:
        - name: http
          containerPort: 80
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 60
          timeoutSeconds: 30
          successThreshold: 1
          failureThreshold: 6
          tcpSocket:
            port: http
        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: 60
          timeoutSeconds: 30
          successThreshold: 1
          failureThreshold: 6
          tcpSocket:
            port: http
        volumeMounts:
        - name: public-pv
          mountPath: /var/www/app/public
        - name: storage-pv
          mountPath: /var/www/app/storage
          subPath: storage
        #- name: invoices-app-logo-pv
        #  mountPath: /var/www/app/public/logo
        #  subPath: logo
        - name: invoices-nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: public-pv
        persistentVolumeClaim:
          claimName: invoices-app-public-pvc
      - name: storage-pv
        persistentVolumeClaim:
          claimName: invoices-app-storage-pvc
      - name: invoices-nginx-conf
        configMap:
          name: invoices-nginx-conf
